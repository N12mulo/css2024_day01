# -*- coding: utf-8 -*-
"""
Created on Mon Jan 29 12:32:37 2024

@author: nhlam
"""

import pandas as pd 

file = pd.read_csv("country_data.csv")

print(file)

print(file.describe())

"""
             Age
count  11.000000
mean   33.363636
std     9.233339
min    22.000000
25%    27.000000
50%    30.000000
75%    39.500000
max    49.000000
"""

file = pd.read_csv("iris.csv")

print(file)

print(file.info())

print(file.describe())

"""
  sepal_length  sepal_width  petal_length  petal_width         species
0             5.1          3.5           1.4          0.2     Iris-setosa
1             4.9          3.0           1.4          0.2     Iris-setosa
2             4.7          3.2           1.3          0.2     Iris-setosa
3             4.6          3.1           1.5          0.2     Iris-setosa
4             5.0          3.6           1.4          0.2     Iris-setosa
..            ...          ...           ...          ...             ...
145           6.7          3.0           5.2          2.3  Iris-virginica
146           6.3          2.5           5.0          1.9  Iris-virginica
147           6.5          3.0           5.2          2.0  Iris-virginica
148           6.2          3.4           5.4          2.3  Iris-virginica
149           5.9          3.0           5.1          1.8  Iris-virginica
"""

"""
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 150 entries, 0 to 149
Data columns (total 5 columns):
 #   Column        Non-Null Count  Dtype  
---  ------        --------------  -----  
 0   sepal_length  150 non-null    float64
 1   sepal_width   150 non-null    float64
 2   petal_length  150 non-null    float64
 3   petal_width   150 non-null    float64
 4   species       150 non-null    object 
dtypes: float64(4), object(1)
memory usage: 6.0+ KB
"""

"""
sepal_length  sepal_width  petal_length  petal_width
count    150.000000   150.000000    150.000000   150.000000
mean       5.843333     3.054000      3.758667     1.198667
std        0.828066     0.433594      1.764420     0.763161
min        4.300000     2.000000      1.000000     0.100000
25%        5.100000     2.800000      1.600000     0.300000
50%        5.800000     3.000000      4.350000     1.300000
75%        6.400000     3.300000      5.100000     1.800000
max        7.900000     4.400000      6.900000     2.500000
"""

file = pd.read_csv('insurance_data.csv',skiprows=5)

print(file)

"""
   X      Y
0   108  392.5
1    19   46.2
2    13   15.7
3   124  422.2
4    40  119.4
..  ...    ...
58    9   87.4
59   31  209.8
60   14   95.5
61   53  244.6
62   26  187.5
"""

file = pd.read_csv('housing_data.csv')

print(file)
"""
     0.00632   18   2.31    0  0.538  6.575  ...  1    296  15.3   396.9  4.98    24
0    0.02731  0.0   7.07  0.0  0.469  6.421  ...  2  242.0  17.8  396.90  9.14  21.6
1    0.02729  0.0   7.07  0.0  0.469  7.185  ...  2  242.0  17.8  392.83  4.03  34.7
2    0.03237  0.0   2.18  0.0  0.458  6.998  ...  3  222.0  18.7  394.63  2.94  33.4
3    0.06905  0.0   2.18  0.0  0.458  7.147  ...  3  222.0  18.7  396.90  5.33  36.2
4    0.02985  0.0   2.18  0.0  0.458  6.430  ...  3  222.0  18.7  394.12  5.21  28.7
..       ...  ...    ...  ...    ...    ...  ... ..    ...   ...     ...   ...   ...
500  0.06263  0.0  11.93  0.0  0.573  6.593  ...  1  273.0  21.0  391.99  9.67  22.4
501  0.04527  0.0  11.93  0.0  0.573  6.120  ...  1  273.0  21.0  396.90  9.08  20.6
502  0.06076  0.0  11.93  0.0  0.573  6.976  ...  1  273.0  21.0  396.90  5.64  23.9
503  0.10959  0.0  11.93  0.0  0.573  6.794  ...  1  273.0  21.0  393.45  6.48  22.0
504  0.04741  0.0  11.93  0.0  0.573  6.030  ...  1  273.0  21.0  396.90  7.88  11.9
"""

column_names = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N"]

file = pd.read_csv ('housing_data.csv',names = column_names)

print(file)

print(file.describe())


"""
   A     B      C    D      E  ...      J     K       L     M     N
0    0.00632  18.0   2.31  0.0  0.538  ...  296.0  15.3  396.90  4.98  24.0
1    0.02731   0.0   7.07  0.0  0.469  ...  242.0  17.8  396.90  9.14  21.6
2    0.02729   0.0   7.07  0.0  0.469  ...  242.0  17.8  392.83  4.03  34.7
3    0.03237   0.0   2.18  0.0  0.458  ...  222.0  18.7  394.63  2.94  33.4
4    0.06905   0.0   2.18  0.0  0.458  ...  222.0  18.7  396.90  5.33  36.2
..       ...   ...    ...  ...    ...  ...    ...   ...     ...   ...   ...
501  0.06263   0.0  11.93  0.0  0.573  ...  273.0  21.0  391.99  9.67  22.4
502  0.04527   0.0  11.93  0.0  0.573  ...  273.0  21.0  396.90  9.08  20.6
503  0.06076   0.0  11.93  0.0  0.573  ...  273.0  21.0  396.90  5.64  23.9
504  0.10959   0.0  11.93  0.0  0.573  ...  273.0  21.0  393.45  6.48  22.0
505  0.04741   0.0  11.93  0.0  0.573  ...  273.0  21.0  396.90  7.88  11.9
"""

"""
A           B           C  ...           L           M           N
count  506.000000  506.000000  506.000000  ...  506.000000  506.000000  452.000000
mean     1.269195   13.295257    9.205158  ...  332.791107   11.537806   23.750442
std      2.399207   23.048697    7.169630  ...  125.322456    6.064932    8.808602
min      0.000000    0.000000    0.000000  ...    0.320000    1.730000    6.300000
25%      0.049443    0.000000    3.440000  ...  364.995000    6.877500   18.500000
50%      0.144655    0.000000    6.960000  ...  390.660000   10.380000   21.950000
75%      0.819623   18.100000   18.100000  ...  395.615000   15.015000   26.600000
max      9.966540  100.000000   27.740000  ...  396.900000   34.410000   50.000000
"""

